//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyShopesms
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbEntities : DbContext
    {
        public dbEntities()
            : base("name=dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Procedures> Procedures { get; set; }
        public virtual DbSet<Shops> Shops { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<BuingInvoice> BuingInvoice { get; set; }
        public virtual DbSet<BuingView> BuingView { get; set; }
        public virtual DbSet<SalesView> SalesView { get; set; }
        public virtual DbSet<ViewAllBalance> ViewAllBalance { get; set; }
        public virtual DbSet<UserPayment> UserPayment { get; set; }
        public virtual DbSet<HDD> HDD { get; set; }
        public virtual DbSet<Matirails> Matirails { get; set; }
        public virtual DbSet<SalesInvoice> SalesInvoice { get; set; }
    
        public virtual int MaxInvoice(Nullable<long> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxInvoice", shopIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> MaxInvoice1(Nullable<long> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("MaxInvoice1", shopIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> MaxInvoice2(Nullable<long> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("MaxInvoice2", shopIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SalesSum(Nullable<long> shopId, Nullable<long> userid)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SalesSum", shopIdParameter, useridParameter);
        }
    
        public virtual ObjectResult<Get_Matirials_Result> Get_Matirials()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Matirials_Result>("Get_Matirials");
        }
    
        public virtual ObjectResult<Get_Matirials1_Result> Get_Matirials1(Nullable<long> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Matirials1_Result>("Get_Matirials1", shopIdParameter);
        }
    }
}
